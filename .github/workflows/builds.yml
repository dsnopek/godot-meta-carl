name: Build GDExtension
on:
  workflow_call:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - platform: linux
            arch: x86_64
            os: ubuntu-22.04
            artifact_path: studio/addons/godot-meta-carl/linux
          - platform: windows
            arch: x86_64
            os: windows-latest
            artifact_path: studio/addons/godot-meta-carl/windows
          - platform: macos
            arch: universal
            os: macos-latest
            artifact_path: studio/addons/godot-meta-carl/macos
          - platform: android
            arch: arm64
            os: ubuntu-22.04
            artifact_path: studio/addons/godot-meta-carl/android
        target-type: [template_debug, template_release]

    runs-on: ${{ matrix.target.os }}
    steps:
      # Clone this repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Lint
      - name: Setup clang-format
        shell: bash
        run: |
          python -m pip install clang-format
      - name: Run clang-format
        shell: bash
        run: |
          clang-format src/** --dry-run --Werror

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62
          ndk-version: r28b

      - name: Restore .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      # Build the extension
      - name: Build GDExtension
        shell: bash
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          if "${{ matrix.target.platform == 'windows' }}"; then
            SCONS_EXTRA="use_mingw=yes"
          fi
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} build_profile=build_profile.json ndk_version=28.1.13356709 $SCONS_EXTRA
          rm -f bin/*.a

      - name: Save .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-meta-carl-build-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.target-type }}
          path: |
            ${{ matrix.target.artifact_path }}

  asset:
    runs-on: ubuntu-22.04
    needs: build
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          path: artifacts
          pattern: godot-meta-carl-build-*
      - name: Copy addon
        run: |
          mkdir -p asset/addons
          cp -r studio/addons/godot-meta-carl asset/addons/
          cp artifacts/godot-meta-carl-build-linux-*/* asset/addons/godot-meta-carl/linux/
          cp artifacts/godot-meta-carl-build-windows-*/* asset/addons/godot-meta-carl/windows/
          cp artifacts/godot-meta-carl-build-macos-*/* asset/addons/godot-meta-carl/macos/
          cp artifacts/godot-meta-carl-build-android-*/* asset/addons/godot-meta-carl/android/
      - name: Upload addon as artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-meta-carl-addon
          path: |
            asset
      - name: Zip addon
        run: |
          (cd asset && zip -qq -r ../godot-meta-carl.zip addons)
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "godot-meta-carl.zip"
          draft: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

  studio:
    runs-on: ubuntu-22.04
    container:
      image: barichello/godot-ci:4.4.1
    needs: asset
    if: github.event_name == 'push'
    env:
      GODOT_VERSION: 4.4.1
      EXPORT_NAME: godot-carl-studio
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v5
        with:
          name: godot-meta-carl-addon
          path: studio
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/export_templates/
          mkdir -v -p ~/.config/
          mv /root/.config/godot ~/.config/godot
          mv /root/.local/share/godot/export_templates/${GODOT_VERSION}.stable ~/.local/share/godot/export_templates/${GODOT_VERSION}.stable
      - name: Meta Quest Build
        run: |
          cd studio

          mkdir -v -p build/meta-quest
          EXPORT_DIR="$(readlink -f build)"

          echo "${{ secrets.ANDROID_KEYSTORE }}" | base64 --decode > release.keystore
          export GODOT_ANDROID_KEYSTORE_RELEASE_PATH="$PWD/release.keystore"
          export GODOT_ANDROID_KEYSTORE_RELEASE_USER="${{ secrets.ANDROID_KEYSTORE_USER }}"
          export GODOT_ANDROID_KEYSTORE_RELEASE_PASSWORD="${{ secrets.ANDROID_KEYSTORE_PASSWORD }}"

          godot --headless --verbose --install-android-build-template --export-release "Meta Quest" "$EXPORT_DIR/meta-quest/$EXPORT_NAME.apk"
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-carl-studio
          path: studio/build/meta-quest
      - name: Add to release
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          artifacts: "studio/build/meta-quest/godot-carl-studio.apk"
          draft: true
          omitNameDuringUpdate: true
          omitBodyDuringUpdate: true
          omitDraftDuringUpdate: true
          omitPrereleaseDuringUpdate: true
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
