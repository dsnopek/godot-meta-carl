name: Build GDExtension
on:
  workflow_call:
  push:
  pull_request:
  merge_group:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          [
            { platform: linux, arch: x86_64, os: ubuntu-22.04 },
            { platform: windows, arch: x86_64, os: windows-latest },
            #{ platform: macos, arch: universal, os: macos-latest },
            { platform: android, arch: arm64, os: ubuntu-22.04 },
          ]
        target-type: [template_debug, template_release]

    runs-on: ${{ matrix.target.os }}
    steps:
      # Clone this repository
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      # Lint
      - name: Setup clang-format
        shell: bash
        run: |
          python -m pip install clang-format
      - name: Run clang-format
        shell: bash
        run: |
          clang-format src/** --dry-run --Werror

      # Setup dependencies
      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62
          ndk-version: r28b

      - name: Restore .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      # Build CARL
      - name: Patch CARL library
        shell: bash
        run: |
          (cd CARL && patch -p1 < ../patches/carl.patch)
      - name: Build CARL (desktop)
        if: ${{ matrix.target.platform != 'android' }}
        shell: bash
        run: |
          mkdir CARL_build
          pushd CARL_build >/dev/null
          cmake ../CARL -DCMAKE_BUILD_TYPE=Release
          cmake --build .
          popd >/dev/null
      - name: Build CARL (Android)
        if: ${{ matrix.target.platform == 'android' }}
        shell: bash
        run: |
          cmake --version
          ls /usr/local/lib/android/sdk/ndk/
          mkdir CARL_build_android
          pushd CARL_build_android >/dev/null
          cmake ../CARL -DCMAKE_SYSTEM_NAME=Android -DCMAKE_BUILD_TYPE=Release -DCMAKE_ANDROID_ARCH_ABI="arm64-v8a" -DCMAKE_ANDROID_NDK="$ANDROID_NDK_HOME"
          cmake --build .
          popd >/dev/null

      # Build the extension
      - name: Build GDExtension Debug Build
        shell: bash
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} build_profile=build_profile.json

      - name: Save .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.target-type }}

      # Clean up compilation files
      - name: Windows - Delete compilation files
        if: ${{ matrix.target.platform == 'windows' }}
        shell: pwsh
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      # Upload the build
      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-cpp-template-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.target-type }}
          path: |
            ${{ github.workspace }}/bin/**

  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: godot-cpp-template
          pattern: godot-cpp-template-*
          delete-merged: true
